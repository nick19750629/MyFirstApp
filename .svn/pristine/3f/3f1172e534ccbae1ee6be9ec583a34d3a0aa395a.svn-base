package com.example.nick.myfirstapp;

import android.content.Intent;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.view.View;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.TextView;
import android.widget.Toast;

import android.app.Fragment;
import android.app.FragmentManager;

import com.example.nick.constant.constant;
import com.example.nick.db.DatabaseHelper;
import com.example.nick.db.dicOperation;
import com.example.nick.domain.Practice;
import com.example.nick.myfirstapp.fragment.HabitFrag;
import com.example.nick.myfirstapp.fragment.ImportFrag;
import com.example.nick.myfirstapp.fragment.ImprovementFrag;
import com.example.nick.myfirstapp.fragment.MainFrag;
import com.example.nick.myfirstapp.fragment.SumFrag;
import com.example.nick.myfirstapp.fragment.TodoFrag;
import com.example.nick.myfirstapp.fragment.WelcomeFrag;
import com.example.nick.myfirstapp.fragment.YuwenFrag;
import com.example.nick.util.baseUtil;

import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;

public class MainActivity extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener {

    private List<HashMap<String,String>> dic;
    private int subject;
    private TextView txt;
    private TextView tip;
    private int status;
    private Practice practice;
    private HashMap<String,String> word;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        dic = new ArrayList<HashMap<String,String>>();
        readData();

        practice = new Practice(dic);

        word = practice.getFirstWord();
        txt = (TextView) findViewById(R.id.txtWord);
        tip = (TextView) findViewById(R.id.txtTip);

        setTextValue(txt,tip,word);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String msg = getAnswer(word);
                Snackbar snack = Snackbar.make(view, msg, Snackbar.LENGTH_LONG);
                status = 0;
                if (!practice.isLast()){
                    snack.setAction("回答正确！", new View.OnClickListener(){
                        @Override
                        public void onClick(View v) {
                            status = 1;
                        }
                    });
                }else{
                    snack.setAction("重新开始？", new View.OnClickListener(){
                        @Override
                        public void onClick(View v) {
                            status = 9;
                            //Toast.makeText(MainActivity.this, "暂时保留", Toast.LENGTH_LONG).show();
                        }
                    });
                }
                snack.setCallback(new Snackbar.Callback() {
                    @Override
                    public void onDismissed(Snackbar snackbar, int event) {
                        super.onDismissed(snackbar, event);
                        switch (status) {
                            case 0:
                                countData("mistake",word);
                                Toast.makeText(MainActivity.this,"没有记住",Toast.LENGTH_LONG).show();
                                break;
                            case 1:
                                countData("correct",word);
                                if (!practice.isLast()) {
                                    word = practice.getNextWord();
                                    setTextValue(txt, tip, word);
                                }
                                Toast.makeText(MainActivity.this, "回答正确", Toast.LENGTH_LONG).show();
                                break;
                            default:
                                word = practice.getFirstWord();
                                setTextValue(txt, tip, word);
                                Toast.makeText(MainActivity.this, "重新练习", Toast.LENGTH_LONG).show();
                        }
                    }
                });
                snack.show();
            }
        });

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.setDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);
    }

    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            //Toast.makeText(MainActivity.this,"设置功能 怎么开发？",Toast.LENGTH_LONG).show();
            startActivity(new Intent(this.getApplicationContext(), SettingsActivity.class));
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        Fragment fragment;
        FragmentManager fragmentManager = getFragmentManager();

        /*
        if (id == R.id.nav_camera) {
            // Handle the camera action
            fragment = new WelcomeFrag();
        } else if (id == R.id.nav_gallery) {
            fragment = new MainFrag();
            Toast.makeText(MainActivity.this,"暂时保留。",Toast.LENGTH_LONG).show();
        } else if (id == R.id.nav_slideshow) {
            fragment = new MainFrag();
            Toast.makeText(MainActivity.this,"暂时保留。",Toast.LENGTH_LONG).show();
        } else */
        if (id == R.id.nav_manage) {
            fragment = new WelcomeFrag();
            //Toast.makeText(MainActivity.this,"暂时保留。",Toast.LENGTH_LONG).show();
        } else if (id == R.id.nav_habit) {
            fragment = new HabitFrag();
        } else if (id == R.id.nav_recite) {
            fragment = new MainFrag();
        } else if (id == R.id.nav_sum) {
            fragment = new SumFrag();
        } else if (id == R.id.nav_practise) {
            fragment = new YuwenFrag();
        } else if (id == R.id.nav_import) {
            fragment = new ImportFrag();
        } else if (id == R.id.nav_improve) {
            fragment = new ImprovementFrag();
            //Toast.makeText(MainActivity.this,"暂时保留。",Toast.LENGTH_LONG).show();
        } else if (id == R.id.nav_share) {
            fragment = new TodoFrag();
            //Toast.makeText(MainActivity.this,"暂时保留。",Toast.LENGTH_LONG).show();
        } else if (id == R.id.nav_send) {
            //sendMail();
            fragment = new TodoFrag();
            //Toast.makeText(MainActivity.this,"暂时保留。",Toast.LENGTH_LONG).show();
        }else{
            fragment = new MainFrag();
        }
        fragmentManager.beginTransaction().add(R.id.main_container, fragment).commit();
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }

    private void readData() {
        try{

            DatabaseHelper dbHelper = new DatabaseHelper(MainActivity.this,constant.DB_NAME);
            // 只有调用了DatabaseHelper的getWritableDatabase()方法或者getReadableDatabase()方法之后，才会创建或打开一个连接
            SQLiteDatabase db = dbHelper.getReadableDatabase();
            //SQLiteDatabase db = dbUtil.getDatabase("dic");
            dicOperation.createTable(db);
            boolean imported = false;
            if (dicOperation.getCountByMode(db,constant.CNT_ALL) > 0) {
                getDataFromDb(db);
            }else {
                getDataFromFile(db);
            }
            db.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    private void countData(String key,HashMap<String,String> word) {
        try{

            DatabaseHelper dbHelper = new DatabaseHelper(MainActivity.this, constant.DB_NAME);
            // 只有调用了DatabaseHelper的getWritableDatabase()方法或者getReadableDatabase()方法之后，才会创建或打开一个连接
            SQLiteDatabase db = dbHelper.getReadableDatabase();
            //SQLiteDatabase db = dbUtil.getDatabase("dic");
            dicOperation.count(db,key,word);
            db.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }


    private void getDataFromFile(SQLiteDatabase db) {
        try{
            //得到资源中的Raw数据流
            InputStream in = getResources().openRawResource(R.raw.test);

            if (in != null) {
                InputStreamReader inputreader = new InputStreamReader(in);
                BufferedReader buffreader = new BufferedReader(inputreader);
                dic.clear();

                db.beginTransaction();

                String line;
                //分行读取
                while ((line = buffreader.readLine()) != null) {
                    HashMap word = new HashMap<String,String>();
                    String b[] = line.split("\t");
                    if (b.length == 4) {
                        word.put("e",b[0]); //English
                        word.put("p",b[1]); //phonetic
                        word.put("c",b[2]); //Chinese
                        word.put("o",b[3]); //origin
                        dicOperation.insertBatch(db,word);
                        dic.add(word);
                    } else {
                        //TODO error
                    }
                }

                db.setTransactionSuccessful();
                db.endTransaction();
            }

            //关闭
            in.close();

        }catch(Exception e){
            e.printStackTrace();
        }
    }

    private void getDataFromDb(SQLiteDatabase db) {
        try{
            dic = dicOperation.queryAll(db);
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    private String getAnswer(HashMap<String,String> word) {
        String msg = "";
        if (word == null) return msg;
        switch (subject %2) {
            case 0:
                msg = word.get("c");
                break;
            default:
                msg = word.get("e") + "\t" + word.get("p");
        }
        return msg;
    }

    private void setTextValue(TextView text,TextView tip,HashMap<String,String> word) {

        if (word == null) {
            tip.setText("本轮测试结束");
            return;
        }

        subject = baseUtil.dice();

        if ((subject % 2) == 0) {
            text.setText(word.get("e"));
            tip.setText("请给出中文解释！");
        }else {
            text.setText(word.get("c"));
            tip.setText("请拼出英文单词，并正确发音！");
        }
    }

}
